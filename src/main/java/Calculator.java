public class Calculator {


    public static void main(String[] strings) {
        String s = "3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12+3+5+7*7+4*6+8+5+8+3*6*3+5*6+9+1*5+3+5*0+4+0+1+25+11*3+51*4*12";
        int result = result(s);
        System.out.println(result);

    }

    private static int result(String s) {
        String operations[] = s.split("[0-9]+");
        String numbers[] = s.split("[+*]");
        if (operations.length != numbers.length)
            throw new IllegalArgumentException("Some is going wrong ! ");
        int result = 0;
        for (int i = 0; i < numbers.length; i++) {
            int operand1 = Integer.parseInt(numbers[i]);
            if (i < operations.length - 1 && operations[i + 1].equals("*")) {
                int op2 = Integer.parseInt(numbers[i]);
                int k = i + 1;
                while (k < operations.length && operations[k].equals("*")) {
                    op2 *= Integer.parseInt(numbers[k]);
                    k++;
                    i++;
                }
                operand1 = op2;
            }

            result = result + operand1;
        }
        return result;
    }
}
